{"version":3,"sources":["images/FujiExample.jpg","images/DabinExample.jpg","images/CameraExample.jpg","images/BladeRunnerExample.jpg","images/Save_Preview.jpg","config/keys.js","actions/authActions.js","components/LoginModal.js","actions/MyPaletteAPI.js","components/Logout.js","components/MobileContainer.js","components/DesktopContainer.js","actions/convertRGB.js","actions/colorInfoActions.js","components/EditModalColorInfo.js","components/EditModal.js","components/ConfirmDeleteModal.js","components/EllipseMenu.js","components/MyPallettes.js","actions/index.js","components/ColorsList.js","components/ImageMain.js","components/ImageModal.js","components/ImageSelection.js","components/ColorPicker.js","components/ColorInfo.js","components/Regenerate.js","components/SavePalette.js","components/Generate.js","components/App.js","reducers/clarifaiReducer.js","reducers/imageUrlReducer.js","reducers/colorInfoReducer.js","reducers/colorPaletteReducer.js","reducers/errorsReducer.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["module","exports","__webpack_require__","p","clarifaiID","logoutUser","type","tokenConfig","token","localStorage","getItem","config","headers","Content-type","Isemail","require","LoginModal","state","activeItem","header","button","verifyPassword","email","userNamePlaceHolder","passWordPlaceHolder","description","errorStatusPassword","errorMsgPassword","errorStatusEmail","errorMsgEmail","showLogin","size","_this","setState","props","openModal","clearErrors","showSignup","close","resetDefaults","username","password","closeModal","handleLogInClick","e","_ref","name","handleSignUpClick","_ref2","this","event","key","Object","defineProperty","target","value","preventDefault","length","validate","registerUser","loginUser","_this2","react_default","a","createElement","className","Input","placeholder","autoComplete","onChange","handleInput","error","undefined","buttonTwo","Button","color","onClick","isLoading","Dimmer","active","inverted","Loader","_this3","_this$state","buttonOne","buttonTwoRender","Modal","open","modal","onClose","closeIcon","Menu","pointing","secondary","Item","Content","style","errorMessage","onSubmit","buttonSubmit","verifyPasswordRender","renderLoader","Component","connect","errors","message","auth","dispatch","body","JSON","stringify","axios","post","Content-Type","then","res","payload","data","catch","err","console","log","response","callAPI","get","concat","Logout","useDispatch","useSelector","user","useEffect","react_router_dom","to","getWidth","window","Responsive","onlyTablet","minWidth","innerWidth","MobileContainer","handleSidebarHide","sidebarOpened","handleToggle","Authenticated","components_Logout","components_LoginModal","as","Link","minHeight","padding","children","Sidebar","Pushable","maxWidth","onlyMobile","animation","onHide","vertical","visible","myPalettesMenuItemRender","Pusher","dimmed","Segment","textAlign","sideBarStyles","Container","Icon","position","loginRender","isAuthenticated","DesktopContainer","hideFixedMenu","fixed","showFixedMenu","Visibility","once","onBottomPassed","onBottomPassedReverse","borderless","myPalettesRender","cutHex","h","charAt","substring","toHex","n","parseInt","isNaN","Math","max","min","sendColorInfo","hexColor","alpha","R","G","hexToG","B","hexToB","clearRecieved","status","sendPositionInfo","clearPosition","sendSelectedColor","selectedColor","sendAlphaInfo","EditModalColorInfo","_this$props","hexInput","hexColorOnChange","handleChange","colorInfo","colors","EditModal","title","selectedSet","colorPalette","newColor","hex","toUpperCase","rgb","closeConfigShow","dimmer","colorPosition","openEdit","cancel","closeEdit","handleConfirm","UpdateData","updateColorPalette","objectID","index","react_color_es","marginRight","r","g","b","onChangeComplete","map","handleOnClickSquare","backgroundColor","opacity","cursor","renderCarot","newHexColor","trim","label","handleTitleInput","renderOneColorSet","Grid","stackable","columns","Column","computer","tablet","renderColorPicker","components_EditModalColorInfo","Actions","myPalettes","Data","id","colorSet","put","ConfirmDelete","deleteColorPalette","content","deleteColor","DeleteColor","delete","DropdownExampleIcon","Dropdown","simple","icon","components_EditModal","ConfirmDeleteModal","MyPallettes","getColors","prevProps","margin","palette","_id","EllipseMenu","Image","src","url","centered","Header","renderPalettes","addColor","AddColor","updateColor","UpdateColor","loading","Clarifai","app","App","apiKey","analyzeImage","models","predict","hexColors","outputs","push","raw_hex","slice","fetch","json","RGBtoHexData","colorMindResponse","i","loader","errorData","details","changeMainImage","ColorsList","renderColor","height","renderLoaderHeight","width","colorsRender","ImageMain","mobile","alt","AddImgModal","input","closeImgModal","clearErrorStatus","clearImgSubmit","closeOnEscape","closeOnDimmerClick","openImgModal","sendErrorStatus","checkForDuplicateUrls","newImgSubmit","showModalLoader","exampleImages","image","addImageSelection","submitURL","_this4","renderURLinput","renderSubmitButton","renderErrorMessage","ImageSelection","selectedUrl","border","exampleUrl","renderBorder","handleClick","deleteURL","renderImages","ImageModal","ColorPicker","updateHexColor","ColorInfo","newColorSet","defaultValue","readOnly","Regenerate","SavePalette","placeHolder","newColorPalette","setError","marginLeft","handleConfirmClick","renderConfirmButton","Generate","celled","Row","components_ImageSelection","components_ImageMain","components_ColorsList","components_ColorInfo","components_Regenerate","lib_default","debug","react_router","path","exact","component","initialState","combineReducers","arguments","action","objectSpread","array","item","updateObjectInArray","newImageList","filter","msg","setItem","removeItem","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","es","src_components_App","document","getElementById"],"mappings":"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","file":"static/js/main.cf1fa7c4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/FujiExample.647af6bd.jpg\";","module.exports = __webpack_public_path__ + \"static/media/DabinExample.221dac11.jpg\";","module.exports = __webpack_public_path__ + \"static/media/CameraExample.d7b0995e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/BladeRunnerExample.df8cfb47.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Save_Preview.bc263099.jpg\";","module.exports = {\r\n  clarifaiID: 'bd8644854b19417dacdfa3adba21aab1'\r\n}\r\n","import axios from \"axios\";\r\n\r\n// Check token & load user\r\nexport const loadUser = () => dispatch => {\r\n  // User loading\r\n  dispatch({ type: \"USER_LOADING\" });\r\n\r\n  axios\r\n    .get(\"/api/auth/user\", tokenConfig())\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"USER_LOADED\",\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: err.response\r\n      });\r\n      dispatch({\r\n        type: \"AUTH_ERROR\"\r\n      });\r\n    });\r\n};\r\n\r\n// Register User\r\nexport const registerUser = (email, password) => dispatch => {\r\n  // Show loading bubble in user register\r\n  dispatch({ type: \"USER_LOADING\" });\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post(\"/api/users\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"REGISTER_SUCCESS\",\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      console.log(\"register fail!\");\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: err.response\r\n      });\r\n      dispatch({\r\n        type: \"REGISTER_FAIL\"\r\n      });\r\n    });\r\n};\r\n\r\n// Login User\r\nexport const loginUser = (email, password) => dispatch => {\r\n  // Show loading bubble in login\r\n  dispatch({ type: \"USER_LOADING\" });\r\n\r\n  // headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  // Request body\r\n  const body = JSON.stringify({ email, password });\r\n\r\n  axios\r\n    .post(\"/api/auth\", body, config)\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"LOGIN_SUCCESS\",\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(err => {\r\n      console.log(\"login fail!\");\r\n      dispatch({\r\n        type: \"GET_ERRORS\",\r\n        payload: err.response\r\n      });\r\n      dispatch({\r\n        type: \"LOGIN_FAIL\"\r\n      });\r\n    });\r\n};\r\n\r\n// Logout User\r\nexport const logoutUser = () => {\r\n  return {\r\n    type: \"LOGOUT_SUCCESS\"\r\n  };\r\n};\r\n\r\n// Set up local storage for tokens\r\nexport const tokenConfig = () => {\r\n  // Get token from localstorage\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  // Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-type\": \"application/json\"\r\n    }\r\n  };\r\n\r\n  // If token, add to headers\r\n  if (token) {\r\n    config.headers[\"x-auth-token\"] = token;\r\n  }\r\n\r\n  return config;\r\n};\r\n\r\n// Modal Actions\r\nexport const openModal = () => {\r\n  return {\r\n    type: \"OPEN_MODAL\"\r\n  };\r\n};\r\n\r\nexport const closeModal = () => {\r\n  return {\r\n    type: \"CLOSE_MODAL\"\r\n  };\r\n};\r\n\r\n// Logout User\r\nexport const clearErrors = () => {\r\n  return {\r\n    type: \"CLEAR_ERRORS\"\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerUser } from \"../actions/authActions\";\r\nimport { loginUser } from \"../actions/authActions\";\r\nimport { openModal } from \"../actions/authActions\";\r\nimport { closeModal } from \"../actions/authActions\";\r\nimport { clearErrors } from \"../actions/authActions\";\r\nimport \"./css/loginModal.css\";\r\nimport { Button, Modal, Input, Menu, Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nconst Isemail = require(\"isemail\");\r\n//possibly split into two components login and sign up\r\nclass LoginModal extends Component {\r\n  state = {\r\n    activeItem: \"Log In\",\r\n    header: \"Log In to Color Pic\",\r\n    button: \"Log In\",\r\n    verifyPassword: \"\",\r\n    email: \"\",\r\n    userNamePlaceHolder: \"\",\r\n    passWordPlaceHolder: \"\",\r\n    description: \"\",\r\n    errorStatusPassword: false,\r\n    errorMsgPassword: \"\",\r\n    errorStatusEmail: false,\r\n    errorMsgEmail: \"\"\r\n  };\r\n\r\n  showLogin = size => () => {\r\n    this.setState({\r\n      activeItem: \"Log In\",\r\n      header: \"Log In to Color Pic\",\r\n      button: \"Log In\",\r\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\r\n      passWordPlaceHolder: \"Demo Password: demo\",\r\n      description: \"\"\r\n    });\r\n    this.props.openModal();\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  showSignup = size => () => {\r\n    this.setState({\r\n      activeItem: \"Sign Up\",\r\n      header: \"Join Color Pic\",\r\n      button: \"Sign Up\",\r\n      userNamePlaceHolder: \"Register new user\",\r\n      passWordPlaceHolder: \"Password\",\r\n      description: \"Register to access more features\"\r\n    });\r\n    this.props.openModal();\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  close = () => {\r\n    this.resetDefaults();\r\n    // clear all inputs when modal closes\r\n    this.setState({\r\n      username: \"\",\r\n      password: \"\",\r\n      verifyPassword: \"\",\r\n      email: \"\"\r\n    });\r\n    this.props.closeModal();\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  handleLogInClick = (e, { name }) => {\r\n    this.setState({\r\n      activeItem: name,\r\n      button: name,\r\n      header: \"Log In to Color Pic\",\r\n      username: \"\",\r\n      password: \"\",\r\n      verifyPassword: \"\",\r\n      email: \"\",\r\n      userNamePlaceHolder: \"Demo Email: demo@demo.com\",\r\n      passWordPlaceHolder: \"Demo Password: demo\",\r\n      description: \"\"\r\n    });\r\n    this.resetDefaults();\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  handleSignUpClick = (e, { name }) => {\r\n    this.setState({\r\n      activeItem: name,\r\n      button: name,\r\n      header: \"Join Color Pic Today\",\r\n      username: \"\",\r\n      password: \"\",\r\n      verifyPassword: \"\",\r\n      email: \"\",\r\n      userNamePlaceHolder: \"Register New User\",\r\n      passWordPlaceHolder: \"Password\",\r\n      description: \"Register to access more features\"\r\n    });\r\n    this.resetDefaults();\r\n    this.props.clearErrors();\r\n  };\r\n\r\n  // clear all error messages\r\n  resetDefaults() {\r\n    this.setState({\r\n      errorStatusPassword: false,\r\n      errorStatusEmail: false,\r\n      errorMsgEmail: \"\",\r\n      errorMsgPassword: \"\"\r\n    });\r\n  }\r\n\r\n  handleInput(event, key) {\r\n    this.setState({ [key]: event.target.value });\r\n    this.resetDefaults();\r\n  }\r\n\r\n  buttonSubmit(event) {\r\n    event.preventDefault();\r\n    // If all fields are empty\r\n    if (\r\n      this.state.email === \"\" &&\r\n      this.state.password === \"\" &&\r\n      this.state.verifyPassword === \"\"\r\n    ) {\r\n      this.setState({\r\n        errorStatusEmail: true,\r\n        errorStatusPassword: true,\r\n        errorMsgEmail: \"Email cannot be empty\",\r\n        errorMsgPassword: \"Passwords cannot be empty\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // If email is empty\r\n    if (this.state.email === \"\") {\r\n      this.setState({\r\n        errorMsgEmail: \"Email cannot be empty\",\r\n        errorStatusEmail: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    // If either password is empty on Sign Up\r\n    if (this.state.activeItem === \"Sign Up\" && this.state.password === \"\") {\r\n      this.setState({\r\n        errorMsgPassword: \"Password cannot be empty\",\r\n        errorStatusPassword: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    // If Login Password is empty\r\n    if (this.state.activeItem === \"Log In\" && this.state.password === \"\") {\r\n      this.setState({\r\n        errorMsgPassword: \"Please enter password\",\r\n        errorStatusPassword: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    // If passwords do not match show error message\r\n    if (\r\n      this.state.activeItem === \"Sign Up\" &&\r\n      this.state.password !== this.state.verifyPassword\r\n    ) {\r\n      this.setState({\r\n        errorMsgPassword: \"Passwords do not match\",\r\n        errorStatusPassword: true\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Password should be at least 6 chars\r\n    if (this.state.activeItem === \"Sign Up\" && this.state.password.length < 6) {\r\n      this.setState({\r\n        errorStatusPassword: true,\r\n        errorMsgPassword: \"Passwords should be at least 6 characters\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Validate Email\r\n    if (\r\n      this.state.activeItem === \"Sign Up\" &&\r\n      Isemail.validate(this.state.email) === false\r\n    ) {\r\n      this.setState({\r\n        errorStatusEmail: \"error\",\r\n        errorMsgEmail: \"Not a valid email\"\r\n      });\r\n      return;\r\n    }\r\n\r\n    // If Sign Up and No errors statuses\r\n    if (this.state.activeItem === \"Sign Up\") {\r\n      this.props.registerUser(this.state.email, this.state.password);\r\n    }\r\n\r\n    // If Log In and No errors statuses\r\n    if (this.state.activeItem === \"Log In\") {\r\n      this.props.loginUser(this.state.email, this.state.password);\r\n    }\r\n  }\r\n\r\n  // Only verifyPassword for Sign Up\r\n  verifyPasswordRender() {\r\n    if (this.state.activeItem === \"Sign Up\") {\r\n      return (\r\n        <div>\r\n          <label className=\"login-label\">Verify Password</label>\r\n          <Input\r\n            type=\"password\"\r\n            className=\"login-input\"\r\n            placeholder=\"Password\"\r\n            autoComplete=\"on\"\r\n            value={this.state.verifyPassword}\r\n            onChange={event => this.handleInput(event, \"verifyPassword\")}\r\n            error={this.state.errorStatusPassword}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  buttonTwoRender() {\r\n    if (this.props.buttonTwo !== undefined) {\r\n      return (\r\n        <Button color=\"blue\" onClick={this.showSignup()} className=\"btn-two\">\r\n          {this.props.buttonTwo}\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLoader() {\r\n    if (this.props.isLoading === true) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"big\" inverted />\r\n        </Dimmer>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      activeItem,\r\n      button,\r\n      header,\r\n      email,\r\n      password,\r\n      userNamePlaceHolder,\r\n      passWordPlaceHolder,\r\n      errorStatusPassword,\r\n      errorStatusEmail,\r\n      description,\r\n      errorMsgEmail\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button className=\"login-btn-menu\" onClick={this.showLogin()}>\r\n          {this.props.buttonOne}\r\n        </Button>\r\n        {this.buttonTwoRender()}\r\n        <Modal\r\n          size=\"tiny\"\r\n          open={this.props.modal}\r\n          onClose={this.close}\r\n          closeIcon\r\n        >\r\n          <div className=\"login-header\">\r\n            <h2>{header}</h2>\r\n          </div>\r\n          <Menu className=\"menu-overide\" pointing secondary>\r\n            <Menu.Item\r\n              name=\"Log In\"\r\n              active={activeItem === \"Log In\"}\r\n              onClick={this.handleLogInClick}\r\n            />\r\n            <Menu.Item\r\n              name=\"Sign Up\"\r\n              active={activeItem === \"Sign Up\"}\r\n              onClick={this.handleSignUpClick}\r\n            />\r\n          </Menu>\r\n          <Modal.Content>\r\n            <div className=\"login-description\">\r\n              <h5>{description}</h5>\r\n              <h5 style={{ color: \"red\" }}>{this.props.errorMessage}</h5>\r\n            </div>\r\n            <form onSubmit={event => this.buttonSubmit(event)}>\r\n              <label className=\"login-label\">Email</label>\r\n              <Input\r\n                className=\"login-input\"\r\n                placeholder={userNamePlaceHolder}\r\n                value={email}\r\n                autoComplete=\"on\"\r\n                onChange={event => this.handleInput(event, \"email\")}\r\n                error={errorStatusEmail}\r\n              />\r\n              <p style={{ color: \"red\" }}>{errorMsgEmail}</p>\r\n              <label className=\"login-label\">Password</label>\r\n              <Input\r\n                type=\"password\"\r\n                className=\"login-input\"\r\n                placeholder={passWordPlaceHolder}\r\n                autoComplete=\"on\"\r\n                value={password}\r\n                onChange={event => this.handleInput(event, \"password\")}\r\n                error={errorStatusPassword}\r\n              />\r\n              <p style={{ color: \"red\" }}>{this.state.errorMsgPassword}</p>\r\n              {this.verifyPasswordRender()}\r\n              <Button\r\n                className=\"login-btn\"\r\n                color=\"blue\"\r\n                onClick={event => this.buttonSubmit(event)}\r\n              >\r\n                {button}\r\n              </Button>\r\n            </form>\r\n            {this.renderLoader()}\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    errorMessage: state.errors.message,\r\n    modal: state.auth.modal,\r\n    isLoading: state.auth.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    registerUser,\r\n    loginUser,\r\n    openModal,\r\n    closeModal,\r\n    clearErrors\r\n  }\r\n)(LoginModal);\r\n","import axios from \"axios\";\r\nimport { tokenConfig } from \"./authActions\";\r\n\r\nconst callAPI = (email, dispatch) => {\r\n  // Data Loading\r\n  dispatch({ type: \"COLORS_LOADING\" });\r\n\r\n  axios\r\n    .get(`/api/colors/${email}`)\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"GET_COLORS\",\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(error => console.log(error));\r\n};\r\n\r\n// Get user color palettes\r\nexport const getColors = email => dispatch => {\r\n  callAPI(email, dispatch);\r\n};\r\n\r\n// Add color palettes\r\nexport const newColorPalette = (colorSet, email) => dispatch => {\r\n  axios\r\n    .post(\"/api/colors\", colorSet, tokenConfig())\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"ADD_COLORS\",\r\n        payload: res.data\r\n      })\r\n    )\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    .then(() => {\r\n      callAPI(email, dispatch);\r\n    });\r\n};\r\n\r\n// Update color palettes\r\nexport const updateColorPalette = (id, colorSet, email) => dispatch => {\r\n  axios\r\n    .put(`/api/colors/${id}`, colorSet, tokenConfig())\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"UPDATE_COLORS\",\r\n        payload: colorSet\r\n      })\r\n    )\r\n    .catch(error => {\r\n      console.log(error);\r\n    })\r\n    .then(() => {\r\n      callAPI(email, dispatch);\r\n    });\r\n};\r\n\r\n// Delete user color palettes\r\nexport const deleteColorPalette = id => dispatch => {\r\n  axios\r\n    .delete(`/api/colors/${id}`, tokenConfig())\r\n    .then(res =>\r\n      dispatch({\r\n        type: \"DELETE_COLORS\",\r\n        payload: id\r\n      })\r\n    )\r\n    .catch(error => console.log(error));\r\n};\r\n\r\n// Clear Colors\r\nexport const clearColors = () => {\r\n  return {\r\n    type: \"CLEAR_PALETTE_COLORS\"\r\n  };\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport { clearColors } from \"../actions/MyPaletteAPI\";\r\nimport \"./css/logout.css\";\r\n\r\nconst Logout = () => {\r\n  const dispatch = useDispatch();\r\n  const email = useSelector(state => state.auth.user.email)\r\n  \r\n  useEffect(() => {\r\n    // If token expired log out user\r\n    if (email === undefined) {\r\n      dispatch(logoutUser());\r\n    }\r\n  }, [email]);\r\n\r\n  const logout = () => {\r\n    dispatch(logoutUser());\r\n    dispatch(clearColors());\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <p className=\"username\">Welcome! {email}</p>\r\n      <Link to=\"/\">\r\n        <Button color=\"blue\" className=\"logout-btn\" onClick={() => logout()}>\r\n          Log Out\r\n        </Button>\r\n      </Link>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Logout;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginModal from \"./LoginModal\";\r\nimport Logout from \"./Logout\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport {\r\n  Container,\r\n  Icon,\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Sidebar\r\n} from \"semantic-ui-react\";\r\n\r\nconst getWidth = () => {\r\n  const isSSR = typeof window === \"undefined\";\r\n\r\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\r\n};\r\n\r\nclass MobileContainer extends Component {\r\n  state = {};\r\n\r\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\r\n\r\n  handleToggle = () => this.setState({ sidebarOpened: true });\r\n\r\n  loginRender() {\r\n    if (this.props.Authenticated === true) {\r\n      return <Logout />;\r\n    } else {\r\n      return (\r\n        // Pass down button name depending on modal is used\r\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\r\n      );\r\n    }\r\n  }\r\n\r\n  myPalettesMenuItemRender() {\r\n    if (this.props.Authenticated === true) {\r\n      return (\r\n        <Menu.Item as={Link} to=\"/MyPallettes\">\r\n          My Palettes\r\n        </Menu.Item>\r\n      );\r\n    }\r\n  }\r\n\r\n  sideBarStyles() {\r\n    if (this.props.Authenticated === true) {\r\n      return { minHeight: 122, padding: \"1em 0em\" };\r\n    } else {\r\n      return { minHeight: 82, padding: \"0em 0em\" };\r\n    }\r\n  }\r\n  render() {\r\n    const { children } = this.props;\r\n    const { sidebarOpened } = this.state;\r\n\r\n    return (\r\n      <Responsive\r\n        as={Sidebar.Pushable}\r\n        getWidth={getWidth}\r\n        maxWidth={Responsive.onlyMobile.maxWidth}\r\n      >\r\n        <Sidebar\r\n          as={Menu}\r\n          animation=\"push\"\r\n          onHide={this.handleSidebarHide}\r\n          vertical\r\n          visible={sidebarOpened}\r\n        >\r\n          <Menu.Item as={Link} to=\"/\">\r\n            Color Pic\r\n          </Menu.Item>\r\n          <Menu.Item as={Link} to=\"/Generate\">\r\n            Generate\r\n          </Menu.Item>\r\n          {this.myPalettesMenuItemRender()}\r\n        </Sidebar>\r\n\r\n        <Sidebar.Pusher dimmed={sidebarOpened}>\r\n          <Segment textAlign=\"center\" style={this.sideBarStyles()} vertical>\r\n            <Container>\r\n              <Menu pointing secondary size=\"large\">\r\n                <Menu.Item onClick={this.handleToggle}>\r\n                  <Icon name=\"sidebar\" />\r\n                </Menu.Item>\r\n                <Menu.Item position=\"right\">{this.loginRender()}</Menu.Item>\r\n              </Menu>\r\n            </Container>\r\n          </Segment>\r\n          {children}\r\n        </Sidebar.Pusher>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Authenticated: state.auth.isAuthenticated\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(MobileContainer);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginModal from \"./LoginModal\";\r\nimport Logout from \"./Logout\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport {\r\n  Menu,\r\n  Responsive,\r\n  Segment,\r\n  Visibility,\r\n  Dimmer,\r\n  Loader,\r\n  Container\r\n} from \"semantic-ui-react\";\r\n\r\nconst getWidth = () => {\r\n  const isSSR = typeof window === \"undefined\";\r\n\r\n  return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth;\r\n};\r\n\r\nclass DesktopContainer extends Component {\r\n  state = {};\r\n\r\n  hideFixedMenu = () => {\r\n    this.setState({ fixed: false });\r\n  };\r\n  showFixedMenu = () => {\r\n    this.setState({ fixed: true });\r\n  };\r\n\r\n  loginRender() {\r\n    if (this.props.Authenticated === true) {\r\n      return <Logout />;\r\n    } else {\r\n      return (\r\n        // Pass down button name depending on modal is used\r\n        <LoginModal buttonOne=\"Log In\" buttonTwo=\"Sign up\" />\r\n      );\r\n    }\r\n  }\r\n\r\n  myPalettesRender() {\r\n    if (this.props.Authenticated === true) {\r\n      return (\r\n        <Menu.Item as={Link} to=\"/MyPallettes\">\r\n          <h5>My Palettes</h5>\r\n        </Menu.Item>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderLoader() {\r\n    if (this.props.isLoading === true) {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"small\" inverted />\r\n        </Dimmer>\r\n      );\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n\r\n    return (\r\n      <Responsive getWidth={getWidth} minWidth={Responsive.onlyTablet.minWidth}>\r\n        <Visibility\r\n          once={false}\r\n          onBottomPassed={this.showFixedMenu}\r\n          onBottomPassedReverse={this.hideFixedMenu}\r\n        >\r\n          <Segment className=\"menu-container\" textAlign=\"center\" vertical>\r\n            <Menu className=\"menu-small\" size=\"small\" borderless>\r\n              <Container>\r\n                <Menu.Item as={Link} to=\"/\">\r\n                  <h5>Color Pic</h5>\r\n                </Menu.Item>\r\n                <Menu.Item as={Link} to=\"/Generate\">\r\n                  <h5>Generate</h5>\r\n                </Menu.Item>\r\n                {this.myPalettesRender()}\r\n                <Menu.Item position=\"right\">\r\n                  {this.loginRender()}\r\n                  {this.renderLoader()}\r\n                </Menu.Item>\r\n              </Container>\r\n            </Menu>\r\n          </Segment>\r\n        </Visibility>\r\n\r\n        {children}\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    Authenticated: state.auth.isAuthenticated,\r\n    isLoading: state.auth.isLoading\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { logoutUser }\r\n)(DesktopContainer);\r\n","// Convert Hex to RGB functions\r\nexport const hexToR = h => {\r\n  return parseInt(cutHex(h).substring(0, 2), 16);\r\n};\r\n\r\nexport const hexToG = h => {\r\n  return parseInt(cutHex(h).substring(2, 4), 16);\r\n};\r\n\r\nexport const hexToB = h => {\r\n  return parseInt(cutHex(h).substring(4, 6), 16);\r\n};\r\n\r\nconst cutHex = h => {\r\n  return h.charAt(0) === \"#\" ? h.substring(1, 7) : h;\r\n};\r\n\r\n// Convert RGB to Hex functions\r\nexport const rgbToHex = (R, G, B) => {\r\n  return \"#\" + toHex(R) + toHex(G) + toHex(B);\r\n};\r\n\r\nexport const toHex = n => {\r\n  n = parseInt(n, 10);\r\n  if (isNaN(n)) return \"00\";\r\n  n = Math.max(0, Math.min(n, 255));\r\n  return (\r\n    \"0123456789ABCDEF\".charAt((n - (n % 16)) / 16) +\r\n    \"0123456789ABCDEF\".charAt(n % 16)\r\n  );\r\n};\r\n","import { hexToR } from \"./convertRGB\";\r\nimport { hexToG } from \"./convertRGB\";\r\nimport { hexToB } from \"./convertRGB\";\r\n\r\n// Color info Actions\r\nexport const sendColorInfo = (hexColor, alpha) => dispatch => {\r\n  let R = hexToR(hexColor);\r\n  let G = hexToG(hexColor);\r\n  let B = hexToB(hexColor);\r\n  dispatch({\r\n    type: \"SEND_COLOR_INFO\",\r\n    hexColor: hexColor,\r\n    R: R,\r\n    G: G,\r\n    B: B,\r\n    alpha: alpha\r\n  });\r\n};\r\n\r\nexport const clearRecieved = () => dispatch => {\r\n  dispatch({\r\n    type: \"CLEAR_RECIEVED\",\r\n    status: \"\"\r\n  });\r\n};\r\n\r\nexport const sendPositionInfo = position => dispatch => {\r\n  dispatch({\r\n    type: \"SEND_POSITION_INFO\",\r\n    position: position\r\n  });\r\n};\r\n\r\nexport const clearPosition = () => dispatch => {\r\n  dispatch({\r\n    type: \"CLEAR_POSITION_INFO\",\r\n    position: 0\r\n  });\r\n};\r\n\r\nexport const sendSelectedColor = color => dispatch => {\r\n  dispatch({\r\n    type: \"SELECTED_COLOR\",\r\n    selectedColor: color\r\n  });\r\n};\r\n\r\nexport const sendAlphaInfo = alpha => dispatch => {\r\n  dispatch({\r\n    type: \"SEND_ALPHA_INFO\",\r\n    alpha: alpha\r\n  });\r\n};\r\n\r\nexport const updateHexColor = newColorSet => dispatch => {\r\n  dispatch({\r\n    type: \"UPDATE_HEX_COLOR\",\r\n    newColorSet: newColorSet\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nclass EditModalColorInfo extends Component {\r\n  handleChange(event) {\r\n    console.log(event.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { hexInput, R, G, B, alpha } = this.props;\r\n\r\n    return (\r\n      <div className=\"color-info\">\r\n        <h5>Hex</h5>\r\n        <input\r\n          className=\"hex-info-input\"\r\n          value={hexInput}\r\n          onChange={event => this.props.hexColorOnChange(event)}\r\n        />\r\n        <p className=\"info-text\">R</p>\r\n        <p className=\"info-text\">G</p>\r\n        <p className=\"info-text\">B</p>\r\n        <p className=\"info-text\">a</p>\r\n        <div>\r\n          <input\r\n            className=\"info-input\"\r\n            value={R}\r\n            onChange={event => this.handleChange(event)}\r\n          />\r\n          <input\r\n            className=\"info-input\"\r\n            value={G}\r\n            onChange={event => this.handleChange(event)}\r\n          />\r\n          <input\r\n            className=\"info-input\"\r\n            value={B}\r\n            onChange={event => this.handleChange(event)}\r\n          />\r\n          <input\r\n            className=\"info-input\"\r\n            value={alpha}\r\n            onChange={event => this.handleChange(event)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hexColor: state.colorInfo.hexColor,\r\n    R: state.colorInfo.R,\r\n    G: state.colorInfo.G,\r\n    B: state.colorInfo.B,\r\n    alpha: state.colorInfo.alpha,\r\n    colors: state.colors.colors,\r\n    position: state.colorInfo.position\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {}\r\n)(EditModalColorInfo);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { updateColorPalette } from \"../actions/MyPaletteAPI\";\r\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\r\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\r\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\r\nimport { clearPosition } from \"../actions/colorInfoActions\";\r\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\r\nimport EditModalColorInfo from \"./EditModalColorInfo\";\r\nimport { Button, Modal, Icon, Input, Grid, Segment } from \"semantic-ui-react\";\r\nimport \"./css/myPalettes.css\";\r\n\r\nclass EditModal extends Component {\r\n  state = {\r\n    title: \"\",\r\n    selectedSet: [],\r\n    hexInput: \"\"\r\n  };\r\n\r\n  componentDidMount() {\r\n    // send info to local state when modal opens\r\n    const position = this.props.colorPosition;\r\n    this.setState({\r\n      title: this.props.data[position].title,\r\n      selectedSet: this.props.data[position].colors,\r\n      hexInput: this.props.data[position].colors[0].hexColor\r\n    });\r\n  }\r\n\r\n  handleTitleInput(event) {\r\n    this.setState({ title: event.target.value });\r\n  }\r\n\r\n  handleOnClickSquare(color, index, alpha) {\r\n    this.setState({ hexInput: color });\r\n    this.props.sendSelectedColor(color);\r\n    this.props.sendColorInfo(color, alpha);\r\n    this.props.sendPositionInfo(index);\r\n  }\r\n\r\n  handleChange = color => {\r\n    let colorPalette = this.state.selectedSet;\r\n    // create new color object\r\n    let newColor = {\r\n      hexColor: color.hex.toUpperCase(),\r\n      alpha: color.rgb.a\r\n    };\r\n    // update new item in color array\r\n    colorPalette[this.props.position] = newColor;\r\n    // // set new color square in local state\r\n    this.setState({\r\n      selectedSet: colorPalette,\r\n      hexInput: color.hex.toUpperCase()\r\n    });\r\n    // update color info in display\r\n    this.props.sendColorInfo(color.hex.toUpperCase());\r\n    this.props.sendSelectedColor(color.hex.toUpperCase());\r\n    this.props.sendAlphaInfo(color.rgb.a);\r\n  };\r\n\r\n  renderColorPicker() {\r\n    return (\r\n      <ChromePicker\r\n        className=\"chrome-picker-edit\"\r\n        style={{ marginRight: 4 + \"em\" }}\r\n        color={{\r\n          r: this.props.R,\r\n          g: this.props.G,\r\n          b: this.props.B,\r\n          a: this.props.alpha\r\n        }}\r\n        onChangeComplete={this.handleChange}\r\n      />\r\n    );\r\n  }\r\n\r\n  renderOneColorSet() {\r\n    const colorSet = this.state.selectedSet.map((color, index) => (\r\n      <div className=\"color-square-container\" key={color.hexColor + index}>\r\n        <div\r\n          className=\"color-square\"\r\n          onClick={() =>\r\n            this.handleOnClickSquare(color.hexColor, index, color.alpha)\r\n          }\r\n          style={{\r\n            backgroundColor: color.hexColor,\r\n            opacity: color.alpha,\r\n            cursor: \"pointer\"\r\n          }}\r\n        />\r\n        <div style={this.renderCarot(index)} className=\"carot-container\">\r\n          <Icon size=\"big\" name=\"caret up\" />\r\n        </div>\r\n      </div>\r\n    ));\r\n    return colorSet;\r\n  }\r\n\r\n  renderCarot(index) {\r\n    if (index === this.props.position) {\r\n      return {\r\n        color: \"black\"\r\n      };\r\n    } else {\r\n      return {\r\n        color: \"white\"\r\n      };\r\n    }\r\n  }\r\n\r\n  hexColorOnChange(event) {\r\n    // only use upper case and trim white space\r\n    const newHexColor = event.target.value.toUpperCase().trim();\r\n    // Do not update state if more than 7 total characters\r\n    if (newHexColor.length <= 7) {\r\n      this.setState({\r\n        hexInput: newHexColor\r\n      });\r\n    }\r\n    //if hexcolor has all 7 characters and includes # as the first character\r\n    if (newHexColor.length === 7 && newHexColor[0] === \"#\") {\r\n      let colorPalette = this.props.selectedSet;\r\n      let newColor = {\r\n        hexColor: newHexColor,\r\n        alpha: this.props.a\r\n      };\r\n      // update new item in color array\r\n      colorPalette[this.props.position] = newColor;\r\n      // update color info in display\r\n      this.props.sendColorInfo(newHexColor);\r\n      this.props.sendSelectedColor(newHexColor);\r\n      this.props.sendAlphaInfo(this.props.a);\r\n    }\r\n  }\r\n\r\n  closeConfigShow = dimmer => () => {\r\n    const position = this.props.colorPosition;\r\n    this.setState({\r\n      dimmer,\r\n      // send info to local state when modal opens\r\n      title: this.props.data[position].title,\r\n      selectedSet: this.props.data[position].colors,\r\n      hexInput: this.props.data[position].colors[0].hexColor\r\n    });\r\n    // send color info for first square when model opens\r\n    this.props.sendColorInfo(\r\n      this.props.data[position].colors[0].hexColor,\r\n      this.props.data[position].colors[0].alpha\r\n    );\r\n    //open state moved to parent component\r\n    this.props.openEdit();\r\n  };\r\n\r\n  cancel = () => {\r\n    // set original info when modal is canceled\r\n    const position = this.props.colorPosition;\r\n    this.setState({\r\n      title: this.props.data[position].title,\r\n      hexInput: this.props.data[position].colors[0].hexColor,\r\n      selectedSet: this.props.data[position].colors\r\n    });\r\n    //open state moved to parent component\r\n    this.props.closeEdit();\r\n    this.props.clearPosition();\r\n  };\r\n\r\n  handleConfirm = () => {\r\n    const UpdateData = {\r\n      title: this.state.title,\r\n      colors: this.state.selectedSet\r\n    };\r\n    this.props.updateColorPalette(\r\n      this.props.objectID,\r\n      UpdateData,\r\n      this.props.email\r\n    );\r\n    this.props.clearPosition();\r\n    this.props.closeEdit();\r\n  };\r\n\r\n  render() {\r\n    const { dimmer, title, hexInput, selectedSet } = this.state;\r\n    return (\r\n      <div className=\"edit-modal edit-icon-div\">\r\n        <Icon\r\n          className=\"edit-icon\"\r\n          onClick={this.closeConfigShow(true)}\r\n          name=\"edit\"\r\n        />\r\n        <p className=\"edit-text\">Edit</p>\r\n        <Modal\r\n          open={this.props.open}\r\n          //Dimmer not currently working\r\n          dimmer={dimmer}\r\n          onClose={this.close}\r\n        >\r\n          <Modal.Content>\r\n            <Input\r\n              className=\"modal-input\"\r\n              label=\"Title\"\r\n              value={title}\r\n              onChange={event => this.handleTitleInput(event)}\r\n              placeholder=\"Edit Palette Name...\"\r\n            />\r\n            <div>{this.renderOneColorSet()}</div>\r\n            <Grid textAlign=\"center\" stackable columns={2}>\r\n              <Grid.Column computer={10} tablet={9}>\r\n                <Segment>{this.renderColorPicker()}</Segment>\r\n              </Grid.Column>\r\n              <Grid.Column computer={6} tablet={7}>\r\n                <Segment>\r\n                  <EditModalColorInfo\r\n                    hexInput={hexInput}\r\n                    hexColorOnChange={event => this.hexColorOnChange(event)}\r\n                    selectedSet={selectedSet}\r\n                  />\r\n                </Segment>\r\n              </Grid.Column>\r\n            </Grid>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button onClick={this.cancel}>Cancel</Button>\r\n            <Button onClick={this.handleConfirm} color=\"blue\">\r\n              Confirm\r\n            </Button>\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.myPalettes.Data,\r\n    position: state.colorInfo.position,\r\n    hexColor: state.colorInfo.hexColor,\r\n    R: state.colorInfo.R,\r\n    G: state.colorInfo.G,\r\n    B: state.colorInfo.B,\r\n    alpha: state.colorInfo.alpha,\r\n    email: state.auth.user.email\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    updateColorPalette,\r\n    sendPositionInfo,\r\n    sendSelectedColor,\r\n    sendColorInfo,\r\n    sendAlphaInfo,\r\n    clearPosition\r\n  }\r\n)(EditModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Icon, Modal, Button } from \"semantic-ui-react\";\r\nimport { deleteColorPalette } from \"../actions/MyPaletteAPI\";\r\nimport \"./css/confirmDeleteModal.css\";\r\n\r\nclass ConfirmDelete extends Component {\r\n  handleConfirm = () => {\r\n    this.props.deleteColorPalette(this.props.objectID, this.props.token);\r\n    this.props.close();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p onClick={this.props.openModal}>\r\n          <Icon name=\"trash\" />\r\n          Delete\r\n        </p>\r\n        <Modal size=\"tiny\" open={this.props.open} onClose={this.props.close}>\r\n          <Modal.Content>\r\n            <p>{`Are you sure you want to delete ${\r\n              this.props.title\r\n            } palette?`}</p>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button onClick={this.props.close}>Cancel</Button>\r\n            <Button\r\n              onClick={this.handleConfirm}\r\n              color=\"blue\"\r\n              content=\"Confirm\"\r\n            />\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    deleteColor: state.myPalettes.DeleteColor,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { deleteColorPalette }\r\n)(ConfirmDelete);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\r\nimport EditModal from \"./EditModal\";\r\nimport ConfirmDeleteModal from \"./ConfirmDeleteModal\";\r\nimport { Dropdown, Menu } from \"semantic-ui-react\";\r\n\r\nclass DropdownExampleIcon extends Component {\r\n  state = {\r\n    open: false,\r\n    openEdit: false\r\n  };\r\n\r\n  openModal() {\r\n    // Default padding cannot be overriden easily, closes dropdown by default\r\n    // Set dropdown item onClick open just in case user clicks edges\r\n    // Only set to true if open state is already false i.e closed\r\n    if (this.state.open === true) {\r\n      return;\r\n    } else {\r\n      this.setState({ open: true });\r\n    }\r\n  }\r\n\r\n  closeModal() {\r\n    this.setState({ open: false });\r\n  }\r\n\r\n  openEdit() {\r\n    if (this.state.openEdit === true) {\r\n      return;\r\n    } else {\r\n      // send color info for first square when model opens\r\n      const position = this.props.colorPosition;\r\n      this.props.sendColorInfo(\r\n        this.props.data[position].colors[0].hexColor,\r\n        this.props.data[position].colors[0].alpha\r\n      );\r\n      this.setState({ openEdit: true });\r\n    }\r\n  }\r\n\r\n  closeEdit() {\r\n    this.setState({ openEdit: false });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Menu className=\"menu-parent\">\r\n        <Menu.Menu position=\"right\">\r\n          <Dropdown\r\n            simple\r\n            className=\"icon menu-styles\"\r\n            icon=\"ellipsis vertical\"\r\n          >\r\n            <Dropdown.Menu>\r\n              <Dropdown.Item onClick={() => this.openEdit()}>\r\n                <EditModal\r\n                  open={this.state.openEdit}\r\n                  openEdit={() => this.openEdit()}\r\n                  closeEdit={() => this.closeEdit()}\r\n                  title={this.props.title}\r\n                  objectID={this.props.objectID}\r\n                  colorPosition={this.props.colorPosition}\r\n                  selectedSet={this.props.selectedSet}\r\n                />\r\n              </Dropdown.Item>\r\n              <Dropdown.Item onClick={() => this.openModal()}>\r\n                <ConfirmDeleteModal\r\n                  title={this.props.title}\r\n                  objectID={this.props.objectID}\r\n                  open={this.state.open}\r\n                  openModal={() => this.openModal()}\r\n                  close={() => this.closeModal()}\r\n                />\r\n              </Dropdown.Item>\r\n            </Dropdown.Menu>\r\n          </Dropdown>\r\n        </Menu.Menu>\r\n      </Menu>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.myPalettes.Data\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { sendColorInfo }\r\n)(DropdownExampleIcon);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getColors } from \"../actions/MyPaletteAPI\";\r\nimport { logoutUser } from \"../actions/authActions\";\r\nimport EllipseMenu from \"./EllipseMenu\";\r\nimport { Header, Container, Grid, Image } from \"semantic-ui-react\";\r\nimport \"./css/myPalettes.css\";\r\n\r\nclass MyPallettes extends Component {\r\n  componentDidMount() {\r\n    this.props.getColors(this.props.email);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    // Email isn't always loaded right when component is mounted\r\n    if (this.props.email !== prevProps.email && this.props.email !== undefined) {\r\n      this.props.getColors(this.props.email);\r\n    }\r\n  }\r\n\r\n  // Renders one set of 5 colors then insert into renderPalettes()\r\n  renderOneColorSet(colors) {\r\n    const colorSet = colors.map((color, index) => (\r\n      <div\r\n        className=\"color-square-container column\"\r\n        key={color.hexColor + index}\r\n      >\r\n        <div\r\n          className=\"color-square\"\r\n          style={{ backgroundColor: color.hexColor, opacity: color.alpha }}\r\n        />\r\n      </div>\r\n    ));\r\n    return <div style={{ margin: \"0px auto\" }}>{colorSet}</div>;\r\n  }\r\n\r\n  renderPalettes() {\r\n    if (this.props.myPalettes !== undefined) {\r\n      const Palettes = this.props.myPalettes.map((palette, index) => (\r\n        <Grid.Column key={palette._id}>\r\n          <div className=\"palette-container\">\r\n            <h5 className=\"image-header\">{palette.title}</h5>\r\n            <div className=\"ellipsisMenu\">\r\n              <EllipseMenu\r\n                title={palette.title}\r\n                objectID={palette._id}\r\n                colorPosition={index}\r\n                selectedSet={palette.colors}\r\n              />\r\n            </div>\r\n            <Image src={palette.url} centered />\r\n            {this.renderOneColorSet(palette.colors)}\r\n          </div>\r\n        </Grid.Column>\r\n      ));\r\n      return Palettes;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Header as=\"h1\" className=\"palette-header\">\r\n          My Color Palettes\r\n        </Header>\r\n        <div className=\"ui container\">\r\n          <div className=\"ui three column doubling stackable masonry grid\">\r\n            {this.renderPalettes()}\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    myPalettes: state.myPalettes.Data,\r\n    addColor: state.myPalettes.AddColor,\r\n    updateColor: state.myPalettes.UpdateColor,\r\n    loading: state.myPalettes.loading,\r\n    email: state.auth.user.email\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps,{ getColors, logoutUser })(MyPallettes);\r\n","import { rgbToHex } from \"./convertRGB\";\r\nconst Clarifai = require(\"clarifai\");\r\nconst clarifaiID = require(\"../config/keys\").clarifaiID;\r\nconst app = new Clarifai.App({ apiKey: clarifaiID });\r\n\r\n// Califai API Call\r\nexport const analyzeImage = url => dispatch => {\r\n  // Show loading screen\r\n  dispatch({ type: \"CLARIFAI_REQUEST_WAITING\" });\r\n\r\n  app.models\r\n    .predict(\"eeed0b6733a644cea07cf4c60f87ebb7\", url)\r\n    .then(res => {\r\n      const hexColors = [];\r\n      // Create new array of hexcolors from response data\r\n      res.outputs[0].data.colors.map(color => {\r\n        return hexColors.push(color.raw_hex.slice(1, color.raw_hex.length));\r\n      });\r\n      // send hexcolor data as data query to back end\r\n      fetch(\"/api/colormind?colors=\" + hexColors)\r\n        .then(res => res.json())\r\n        .then(res => {\r\n          let RGBtoHexData = [];\r\n          let colorMindResponse = res;\r\n          // create new array from response data with color palette and default alpha = 1\r\n          for (let i = 0; i < colorMindResponse.length; i++) {\r\n            RGBtoHexData.push({\r\n              hexColor: rgbToHex(\r\n                colorMindResponse[i][0],\r\n                colorMindResponse[i][1],\r\n                colorMindResponse[i][2]\r\n              ),\r\n              alpha: 1\r\n            });\r\n          }\r\n          dispatch({\r\n            type: \"ANALYZE_IMAGE\",\r\n            payload: RGBtoHexData,\r\n            status: \"recieved\",\r\n            error: false,\r\n            open: false,\r\n            loader: \"hide\"\r\n          });\r\n        });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: \"ANALYZE_IMAGE_ERROR\",\r\n        errorData: err.data.status.details,\r\n        error: true,\r\n        open: true,\r\n        loader: \"hide\"\r\n      });\r\n    });\r\n};\r\n\r\n// image modal Actions\r\nexport const openImgModal = () => {\r\n  return {\r\n    type: \"OPEN_IMAGE_MODAL\"\r\n  };\r\n};\r\n\r\nexport const closeImgModal = () => {\r\n  return {\r\n    type: \"CLOSE_IMAGE_MODAL\"\r\n  };\r\n};\r\n\r\nexport const newImgSubmit = () => {\r\n  return {\r\n    type: \"NEW_IMAGE_SUBMIT\"\r\n  };\r\n};\r\n\r\nexport const showModalLoader = () => {\r\n  return {\r\n    type: \"CLARIFAI_REQUEST_WAITING\"\r\n  };\r\n};\r\n\r\nexport const clearImgSubmit = () => {\r\n  return {\r\n    type: \"CLEAR_IMAGE_SUBMIT\"\r\n  };\r\n};\r\n\r\nexport const sendErrorStatus = () => {\r\n  return {\r\n    type: \"SEND_ERROR\"\r\n  };\r\n};\r\n\r\nexport const clearErrorStatus = () => {\r\n  return {\r\n    type: \"CLEAR_ERROR\"\r\n  };\r\n};\r\n\r\n// image submit actions\r\nexport const changeMainImage = url => {\r\n  return {\r\n    type: \"MAIN_IMAGE\",\r\n    url: url\r\n  };\r\n};\r\n\r\nexport const addImageSelection = url => {\r\n  return {\r\n    type: \"ADD_URL\",\r\n    url: url\r\n  };\r\n};\r\n\r\nexport const deleteURL = url => dispatch => {\r\n  dispatch({\r\n    type: \"DELETE_URL\",\r\n    url: url\r\n  });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { analyzeImage } from \"../actions\";\r\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\r\nimport { sendPositionInfo } from \"../actions/colorInfoActions\";\r\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\r\nimport { clearRecieved } from \"../actions/colorInfoActions\";\r\nimport { Dimmer, Loader, Grid, Icon } from \"semantic-ui-react\";\r\n\r\nclass ColorsList extends Component {\r\n  componentDidMount() {\r\n    // only make new api call if initally no colors\r\n    if (this.props.colors.length <= 1) {\r\n      this.props.clearRecieved();\r\n      this.props.analyzeImage(this.props.url);\r\n    }\r\n  }\r\n\r\n  // Make API call each time the URL changes\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.url !== prevProps.url) {\r\n      this.props.analyzeImage(this.props.url);\r\n    }\r\n\r\n    if (this.props.status === \"recieved\") {\r\n      // send the first square color info once information sent\r\n      // back from API\r\n      let hexColor = this.props.colors[0].hexColor;\r\n      let index = this.props.position;\r\n      let alpha = 1;\r\n      this.handleOnClickSquare(hexColor, index, alpha);\r\n      this.props.clearRecieved();\r\n    }\r\n  }\r\n\r\n  handleOnClickSquare(color, index, alpha) {\r\n    this.props.sendSelectedColor(color);\r\n    this.props.sendColorInfo(color, alpha);\r\n    this.props.sendPositionInfo(index);\r\n  }\r\n\r\n  renderColor(color, alpha) {\r\n    return {\r\n      backgroundColor: color,\r\n      opacity: alpha,\r\n      cursor: \"pointer\"\r\n    };\r\n  }\r\n\r\n  renderCarot(index) {\r\n    if (index === this.props.position) {\r\n      return {\r\n        color: \"black\"\r\n      };\r\n    } else {\r\n      return {\r\n        color: \"white\"\r\n      };\r\n    }\r\n  }\r\n\r\n  colorsRender() {\r\n    // if there is no error in request and colors data is returned\r\n    if (this.props.colors.length >= 1) {\r\n      const ColorsList = this.props.colors.map((color, index) => (\r\n        <div\r\n          // add index in case there are of same color\r\n          key={color.hexColor + index}\r\n          className=\"color-square-container\"\r\n        >\r\n          <div\r\n            className=\"color-square\"\r\n            style={this.renderColor(color.hexColor, color.alpha)}\r\n            onClick={() =>\r\n              this.handleOnClickSquare(color.hexColor, index, color.alpha)\r\n            }\r\n          />\r\n          <div style={this.renderCarot(index)} className=\"carot-container\">\r\n            <Icon size=\"big\" name=\"caret up\" />\r\n          </div>\r\n        </div>\r\n      ));\r\n      return ColorsList;\r\n    }\r\n  }\r\n\r\n  // Load a initial height before colors are recieved\r\n  renderLoaderHeight() {\r\n    if (this.props.colors.length === 0) {\r\n      return { height: 60 };\r\n    }\r\n  }\r\n  renderLoader() {\r\n    if (this.props.loader === \"show\") {\r\n      return (\r\n        <div style={this.renderLoaderHeight()}>\r\n          <Dimmer active inverted>\r\n            <Loader size=\"large\" inverted>\r\n              Loading Colors\r\n            </Loader>\r\n          </Dimmer>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid.Column width={16}>\r\n        {this.colorsRender()}\r\n        {this.renderLoader()}\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    colors: state.colors.colors,\r\n    selectedColor: state.colorInfo.selectedColor,\r\n    position: state.colorInfo.position,\r\n    url: state.url.url,\r\n    error: state.error,\r\n    status: state.colors.status,\r\n    token: state.auth.token,\r\n    loader: state.colors.loader\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    analyzeImage,\r\n    sendColorInfo,\r\n    sendPositionInfo,\r\n    sendSelectedColor,\r\n    clearRecieved\r\n  }\r\n)(ColorsList);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Grid, Image } from \"semantic-ui-react\";\r\n\r\nconst ImageMain = () => {\r\n  const url = useSelector(state => state.url.url);\r\n  const state = useSelector(state => state);\r\n  return (\r\n    <Grid.Column mobile={16} computer={13}>\r\n      <Image className=\"sample-img\" src={url} alt=\"main\" />\r\n    </Grid.Column>\r\n  );\r\n};\r\n\r\nexport default ImageMain;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { analyzeImage } from \"../actions\";\r\nimport { changeMainImage } from \"../actions\";\r\nimport { addImageSelection } from \"../actions\";\r\nimport { closeImgModal } from \"../actions\";\r\nimport { openImgModal } from \"../actions\";\r\nimport { newImgSubmit } from \"../actions\";\r\nimport { clearImgSubmit } from \"../actions\";\r\nimport { clearErrorStatus } from \"../actions\";\r\nimport { showModalLoader } from \"../actions\";\r\nimport { sendErrorStatus } from \"../actions\";\r\nimport { Button, Modal, Input, Dimmer, Loader } from \"semantic-ui-react\";\r\n\r\nclass AddImgModal extends Component {\r\n  state = { input: \"\" };\r\n\r\n  submitURL(event) {\r\n    event.preventDefault();\r\n    if (this.state.input === \"\") {\r\n      return this.props.sendErrorStatus();\r\n    }\r\n    // if no duplicate urls and input not empty\r\n    if (\r\n      this.checkForDuplicateUrls() === \"no duplicates\" &&\r\n      this.state.input !== \"\"\r\n    ) {\r\n      this.props.analyzeImage(this.state.input);\r\n      this.props.newImgSubmit();\r\n      this.props.showModalLoader();\r\n    }\r\n  }\r\n\r\n  checkForDuplicateUrls() {\r\n    for (let i = 0; i < this.props.exampleImages.length; i++) {\r\n      if (this.state.input === this.props.exampleImages[i]) {\r\n        return \"duplicate exists\";\r\n      }\r\n    }\r\n    return \"no duplicates\";\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (\r\n      this.props.error === false &&\r\n      this.props.status === \"recieved\" &&\r\n      this.props.image === \"new\"\r\n    ) {\r\n      // only run if there are no errors, data is recieved and a new image is submitted\r\n      this.props.changeMainImage(this.state.input);\r\n      this.props.addImageSelection(this.state.input);\r\n      this.props.clearImgSubmit();\r\n      this.setState({ input: \"\" });\r\n    }\r\n  }\r\n\r\n  handleInput(event) {\r\n    this.setState({ input: event.target.value });\r\n    // Clear error if someone types anything\r\n    this.props.clearErrorStatus();\r\n    // clear if new image submitted\r\n    this.props.clearImgSubmit();\r\n  }\r\n\r\n  renderURLinput() {\r\n    // if user clicks confirm with blank title\r\n    // render red error input\r\n    if (this.props.error === true) {\r\n      return (\r\n        <Input\r\n          className=\"url-input\"\r\n          type=\"text\"\r\n          onChange={event => this.handleInput(event)}\r\n          value={this.state.input}\r\n          placeholder=\"Please enter a url...\"\r\n          error\r\n        />\r\n      );\r\n    } else if (this.props.error !== false) {\r\n      return (\r\n        <Input\r\n          className=\"url-input\"\r\n          type=\"text\"\r\n          onChange={event => this.handleInput(event)}\r\n          value={this.state.input}\r\n          placeholder=\"Error! Please check url and try again...\"\r\n          error\r\n        />\r\n      );\r\n    } else {\r\n      //everything else render normal input\r\n      return (\r\n        <Input\r\n          className=\"url-input\"\r\n          type=\"text\"\r\n          onChange={event => this.handleInput(event)}\r\n          value={this.state.input}\r\n          placeholder=\"Copy and paste image url...\"\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  renderSubmitButton() {\r\n    if (this.state.input === \"\") {\r\n      return (\r\n        <Button\r\n          onClick={event => this.submitURL(event)}\r\n          className=\"ui button\"\r\n          color=\"blue\"\r\n          style={{ opacity: 0.7 }}\r\n        >\r\n          Submit\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Button\r\n          onClick={event => this.submitURL(event)}\r\n          className=\"ui button\"\r\n          color=\"blue\"\r\n        >\r\n          Submit\r\n        </Button>\r\n      );\r\n    }\r\n  }\r\n\r\n  renderErrorMessage() {\r\n    if (\r\n      this.props.error === true &&\r\n      this.state.input !== \"\" &&\r\n      this.checkForDuplicateUrls() === \"no duplicates\"\r\n    ) {\r\n      return <p> Please check URL and try again </p>;\r\n    }\r\n    if (this.checkForDuplicateUrls() === \"duplicate exists\") {\r\n      this.props.sendErrorStatus();\r\n      return <p> Image URL already exists. Please try a different one</p>;\r\n    }\r\n  }\r\n\r\n  renderLoader() {\r\n    if (this.props.loader === \"show\") {\r\n      return (\r\n        <Dimmer active inverted>\r\n          <Loader size=\"big\" inverted />\r\n        </Dimmer>\r\n      );\r\n    }\r\n  }\r\n  // Semantic UI settings\r\n  close = () => {\r\n    this.setState({ input: \"\" });\r\n    // Open and Close state in store.js instead of local state\r\n    this.props.closeImgModal();\r\n    this.props.clearErrorStatus();\r\n    this.props.clearImgSubmit();\r\n  };\r\n\r\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\r\n    this.setState({\r\n      closeOnEscape,\r\n      closeOnDimmerClick\r\n    });\r\n    this.props.openImgModal();\r\n    this.props.clearErrorStatus();\r\n    this.props.clearImgSubmit();\r\n  };\r\n\r\n  render() {\r\n    const { closeOnEscape, closeOnDimmerClick } = this.state;\r\n    return (\r\n      <div>\r\n        <Button onClick={this.closeConfigShow(false, true)} icon>\r\n          Try your own image\r\n        </Button>\r\n        <Modal\r\n          open={this.props.open}\r\n          closeOnEscape={closeOnEscape}\r\n          closeOnDimmerClick={closeOnDimmerClick}\r\n          onClose={this.close}\r\n          closeIcon\r\n        >\r\n          <Modal.Content className=\"add-image-modal\">\r\n            <h3>Try your own image</h3>\r\n            <form onSubmit={event => this.submitURL(event)}>\r\n              {this.renderURLinput()}\r\n              {this.renderSubmitButton()}\r\n            </form>\r\n            {this.renderErrorMessage()}\r\n            {this.renderLoader()}\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  // console.log(state);\r\n  return {\r\n    open: state.colors.open,\r\n    error: state.colors.error,\r\n    status: state.colors.status,\r\n    loader: state.colors.loader,\r\n    image: state.colors.image,\r\n    exampleImages: state.url.exampleImages\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    analyzeImage,\r\n    changeMainImage,\r\n    addImageSelection,\r\n    closeImgModal,\r\n    openImgModal,\r\n    newImgSubmit,\r\n    clearImgSubmit,\r\n    clearErrorStatus,\r\n    showModalLoader,\r\n    sendErrorStatus\r\n  }\r\n)(AddImgModal);\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { changeMainImage } from \"../actions\";\r\nimport { clearRecieved } from \"../actions/colorInfoActions\";\r\nimport { clearPosition } from \"../actions/colorInfoActions\";\r\nimport { deleteURL } from \"../actions\";\r\nimport { Grid, Icon } from \"semantic-ui-react\";\r\nimport ImageModal from \"./ImageModal\";\r\n\r\nclass ImageSelection extends Component {\r\n  handleClick(url) {\r\n    // first clear the status from API\r\n    this.props.clearRecieved();\r\n    // set position to 1\r\n    this.props.clearPosition();\r\n    this.props.changeMainImage(url);\r\n  }\r\n\r\n  renderBorder(selectedUrl) {\r\n    if (this.props.url === selectedUrl) {\r\n      return {\r\n        border: \"3px solid #0000CC\",\r\n        opacity: 1\r\n      };\r\n    } else {\r\n      return null;\r\n    }\r\n  }\r\n\r\n  renderImages() {\r\n    return this.props.exampleUrl.map(url => (\r\n      <div className=\"image-wrapper\" key={url}>\r\n        <img\r\n          className=\"image-selection\"\r\n          src={url}\r\n          alt=\"selection\"\r\n          style={this.renderBorder(url)}\r\n          onClick={() => this.handleClick(url)}\r\n        />\r\n        <div onClick={() => this.props.deleteURL(url)} className=\"delete-img\">\r\n          <Icon name=\"remove circle\" />\r\n        </div>\r\n      </div>\r\n    ));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid.Column mobile={16} computer={3}>\r\n        <div className=\"image-modal-container\">\r\n          <div className=\"images-container\">{this.renderImages()}</div>\r\n          <div className=\"modal-container\">\r\n            <ImageModal />\r\n          </div>\r\n        </div>\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.url.url,\r\n    exampleUrl: state.url.exampleImages\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    changeMainImage,\r\n    clearRecieved,\r\n    clearPosition,\r\n    deleteURL,\r\n  }\r\n)(ImageSelection);\r\n","import React, { Component } from \"react\";\r\nimport { ChromePicker } from \"react-color\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateHexColor } from \"../actions/colorInfoActions\";\r\nimport { sendColorInfo } from \"../actions/colorInfoActions\";\r\nimport { sendAlphaInfo } from \"../actions/colorInfoActions\";\r\nimport { sendSelectedColor } from \"../actions/colorInfoActions\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nclass ColorPicker extends Component {\r\n  handleChange = (color, event) => {\r\n    let colorPalette = this.props.colors;\r\n\r\n    // create new color object\r\n    let newColor = {\r\n      hexColor: color.hex.toUpperCase(),\r\n      alpha: color.rgb.a\r\n    };\r\n\r\n    //update new item in color array\r\n    colorPalette[this.props.position] = newColor;\r\n    // send new color pallette, use upppercase for hex colors\r\n    this.props.updateHexColor(colorPalette);\r\n    this.props.sendColorInfo(color.hex.toUpperCase());\r\n    this.props.sendSelectedColor(color.hex.toUpperCase());\r\n    this.props.sendAlphaInfo(color.rgb.a);\r\n  };\r\n\r\n  renderColorPicker() {\r\n    if (this.props.colors.length >= 1) {\r\n      return (\r\n        <div className=\"color-picker\">\r\n          <ChromePicker\r\n            className=\"chrome-picker\"\r\n            style={{\r\n              width: \"100%\",\r\n              marginRight: 4 + \"em\"\r\n            }}\r\n            color={{\r\n              r: this.props.R,\r\n              g: this.props.G,\r\n              b: this.props.B,\r\n              a: this.props.colors[this.props.position].alpha\r\n            }}\r\n            onChangeComplete={this.handleChange}\r\n          />\r\n        </div>\r\n      );\r\n    }\r\n    return <ChromePicker className=\"color-picker\" />;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid.Column mobile={16} tablet={9} computer={10}>\r\n        {this.renderColorPicker()}\r\n      </Grid.Column>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    hexColor: state.colorInfo.hexColor,\r\n    R: state.colorInfo.R,\r\n    G: state.colorInfo.G,\r\n    B: state.colorInfo.B,\r\n    a: state.colorInfo.alpha,\r\n    colors: state.colors.colors,\r\n    position: state.colorInfo.position\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    updateHexColor,\r\n    sendColorInfo,\r\n    sendSelectedColor,\r\n    sendAlphaInfo\r\n  }\r\n)(ColorPicker);\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./css/colorInfo.css\";\r\n\r\nconst ColorInfo = () => {\r\n  const hexColor = useSelector(state => state.colorInfo.hexColor);\r\n  const R = useSelector(state => state.colorInfo.R);\r\n  const G = useSelector(state => state.colorInfo.G);\r\n  const B = useSelector(state => state.colorInfo.B);\r\n  const alpha = useSelector(state => state.colorInfo.alpha);\r\n  const state = useSelector(state => state.colorInfo);\r\n\r\n  return (\r\n    <div className=\"color-info\">\r\n      <h5>Hex</h5>\r\n      <input className=\"hex-info-input\" value={hexColor} />\r\n      <p className=\"info-text\">R</p>\r\n      <p className=\"info-text\">G</p>\r\n      <p className=\"info-text\">B</p>\r\n      <p className=\"info-text\">a</p>\r\n      <div>\r\n        <input className=\"info-input\" defaultValue={R} readOnly />\r\n        <input className=\"info-input\" defaultValue={G} readOnly />\r\n        <input className=\"info-input\" defaultValue={B} readOnly />\r\n        <input\r\n          className=\"info-input\"\r\n          defaultValue={alpha}\r\n          readOnly\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ColorInfo;\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { analyzeImage } from \"../actions\";\r\nimport { clearRecieved } from \"../actions/colorInfoActions\";\r\nimport { clearPosition } from \"../actions/colorInfoActions\";\r\nimport { Button, Icon } from \"semantic-ui-react\";\r\n\r\nconst Regenerate = () => {\r\n  const url = useSelector(state => state.url.url);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClick = (url) => {\r\n    // first clear the status from API\r\n    dispatch(clearRecieved());\r\n    // set position to 1\r\n    dispatch(clearPosition());\r\n    dispatch(analyzeImage(url));\r\n  };\r\n\r\n  return (\r\n    <Button className=\"regen-btn\" onClick={() => handleClick(url)}>\r\n      <Icon name=\"redo\" /> Regenerate\r\n    </Button>\r\n  );\r\n}\r\n\r\nexport default Regenerate;\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { newColorPalette } from \"../actions/MyPaletteAPI\";\r\nimport { Button, Modal, Input, Header, Icon } from \"semantic-ui-react\";\r\n\r\nclass SavePalette extends Component {\r\n  state = {\r\n    input: \"\",\r\n    open: false,\r\n    error: false,\r\n    placeHolder: \"New Palette Name...\"\r\n  };\r\n\r\n  handleInput(event) {\r\n    // set error to false as long as there's user input\r\n    this.setState({\r\n      input: event.target.value,\r\n      error: false,\r\n      placeHolder: \"New Palette Name...\"\r\n    });\r\n  }\r\n\r\n  // Modal Settings\r\n  closeConfigShow = (closeOnEscape, closeOnDimmerClick) => () => {\r\n    this.setState({ closeOnEscape, closeOnDimmerClick, open: true });\r\n  };\r\n\r\n  close = () => {\r\n    // reset to default state on close\r\n    this.setState({\r\n      input: \"\",\r\n      open: false,\r\n      error: false\r\n    });\r\n  };\r\n\r\n  // Send new color set to database\r\n  handleConfirmClick() {\r\n    this.props.newColorPalette(\r\n      {\r\n        url: this.props.url,\r\n        email: this.props.email,\r\n        title: this.state.input,\r\n        colors: this.props.colors\r\n      },\r\n      this.props.email\r\n    );\r\n    this.close();\r\n  }\r\n\r\n  setError() {\r\n    if (this.state.input === \"\") {\r\n      this.setState({\r\n        error: true,\r\n        placeHolder: \"Title Required...\"\r\n      });\r\n    }\r\n\r\n    if (this.state.input.length >= 40) {\r\n      this.setState({\r\n        error: true,\r\n        placeHolder: \"Over Max Characters Allowed\"\r\n      });\r\n    }\r\n  }\r\n\r\n  renderConfirmButton() {\r\n    // set error to true if empty title input\r\n    if (this.state.input === \"\" || this.state.input.length >= 40) {\r\n      return (\r\n        <Button\r\n          onClick={() => this.setError()}\r\n          color=\"blue\"\r\n          style={{ opacity: 0.7 }}\r\n        >\r\n          Create New\r\n        </Button>\r\n      );\r\n    } else {\r\n      return (\r\n        <Link to=\"/MyPallettes\">\r\n          <Button\r\n            color=\"blue\"\r\n            style={{ marginLeft: 0.75 + \"em\" }}\r\n            onClick={() => this.handleConfirmClick()}\r\n          >\r\n            Create New\r\n          </Button>\r\n        </Link>\r\n      );\r\n    }\r\n  }\r\n\r\n  colorsRender() {\r\n    const ColorsList = this.props.colors.map((color, index) => (\r\n      <div key={color.hexColor + index} className=\"color-square-container\">\r\n        <div\r\n          className=\"color-square\"\r\n          style={{\r\n            backgroundColor: color.hexColor,\r\n            opacity: color.alpha\r\n          }}\r\n        />\r\n        <p>{color.hexColor}</p>\r\n      </div>\r\n    ));\r\n    return ColorsList;\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      open,\r\n      closeOnEscape,\r\n      closeOnDimmerClick,\r\n      error,\r\n      placeHolder\r\n    } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <Button\r\n          onClick={this.closeConfigShow(true, false)}\r\n          className=\"save-pallette\"\r\n          icon\r\n        >\r\n          <Icon name=\"save\" /> Save Palette\r\n        </Button>\r\n        <Modal\r\n          open={open}\r\n          closeOnEscape={closeOnEscape}\r\n          closeOnDimmerClick={closeOnDimmerClick}\r\n          onClose={this.close}\r\n          closeIcon\r\n        >\r\n          <Modal.Content>\r\n            <Header as=\"h2\">Save Palette</Header>\r\n            <Input\r\n              className=\"savepalette-modal-input\"\r\n              label=\"Title\"\r\n              value={this.state.input}\r\n              onChange={event => this.handleInput(event)}\r\n              placeholder={placeHolder}\r\n              error={error}\r\n            />\r\n            <div className=\"colors-render\">{this.colorsRender()}</div>\r\n          </Modal.Content>\r\n          <Modal.Actions>\r\n            <Button onClick={() => this.close()}>Cancel</Button>\r\n            {this.renderConfirmButton()}\r\n          </Modal.Actions>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    url: state.url.url,\r\n    email: state.auth.user.email,\r\n    colors: state.colors.colors,\r\n    token: state.auth.token\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { newColorPalette }\r\n)(SavePalette);\r\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport ColorsList from \"./ColorsList\";\nimport ImageMain from \"./ImageMain\";\nimport ImageSelection from \"./ImageSelection\";\nimport ColorPicker from \"./ColorPicker\";\nimport ColorInfo from \"./ColorInfo\";\nimport Regenerate from \"./Regenerate\";\nimport SavePalette from \"./SavePalette\";\nimport {\n  Container,\n  Grid,\n  Popup,\n  Button,\n  Icon,\n  Header\n} from \"semantic-ui-react\";\n\nconst Generate = () => {\n  const isAuthenticated = useSelector(state => state.auth.isAuthenticated)\n  const savepaletteRender = () => {\n    if (isAuthenticated) {\n      return <SavePalette />;\n    } else {\n      return (\n        <Popup\n          trigger={\n            <Button className=\"save-pallette\">\n              <Icon name=\"save\" /> Save Palette\n            </Button>\n          }\n          content=\"Log In required for this feature\"\n          position=\"bottom right\"\n          size=\"large\"\n          basic\n        />\n      );\n    }\n  }\n  return (\n    <div className=\"HomePage\">\n      <Container textAlign=\"center\">\n        <Header as=\"h1\" className=\"generate-header\">\n          Choose a picture and analyze\n        </Header>\n        <Grid celled>\n          <Grid.Row>\n            <ImageSelection />\n            <ImageMain />\n          </Grid.Row>\n          <Grid.Row>\n            <ColorsList />\n          </Grid.Row>\n          <Grid.Row>\n            <Grid.Column mobile={16} tablet={7} computer={6}>\n              <ColorInfo />\n              <div className=\"regen-save-buttons\">\n                <Regenerate />\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </div>\n  );\n}\n\nexport default Generate;\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { loadUser } from \"../actions/authActions\";\nimport Analytics from \"react-router-ga\";\nimport HeaderMenu from \"./HeaderMenu\";\nimport LandingPage from \"./LandingPage\";\nimport MyPallettes from \"./MyPallettes\";\nimport Footer from \"./Footer\";\nimport Generate from \"./Generate\";\nimport \"./App.css\";\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log(\"This app was created by Fu-Lin Liu, a web developer based out of San Francisco. I can be reached at fulin426@gmail.com\");\n    if (localStorage.getItem(\"token\") !== null) {\n      dispatch(loadUser());\n    }\n  });\n  return (\n    <BrowserRouter>\n      <Analytics id=\"UA-135017095-3\" debug>\n        <Route path=\"/\" exact component={Generate} />\n        <Route path=\"/Generate\" component={Generate} />\n        <Route path=\"/MyPallettes\" component={MyPallettes} />\n      </Analytics>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const initialState = {\r\n  colors: [],\r\n  status: '',\r\n  error: false,\r\n  errorData: '',\r\n  open: false,\r\n  loader: 'hide',\r\n  image: ''\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'ANALYZE_IMAGE':\r\n      return {...state,\r\n        colors: action.payload,\r\n        status: action.status,\r\n        // only close modal once success payload is recieved\r\n        open: action.open,\r\n        // clear error message if success\r\n        error: action.error,\r\n        loader: action.loader\r\n      };\r\n    case 'CLARIFAI_REQUEST_WAITING':\r\n      return {\r\n        ...state,\r\n        loader: 'show'\r\n      };\r\n    case 'CLEAR_RECIEVED':\r\n      return {\r\n        ...state,\r\n        status: action.status\r\n      };\r\n    case 'NEW_IMAGE_SUBMIT':\r\n      return {\r\n        ...state,\r\n        image: 'new'\r\n      };\r\n    case 'CLEAR_IMAGE_SUBMIT':\r\n      return {\r\n        ...state,\r\n        image: ''\r\n      };\r\n    case 'SEND_ERROR':\r\n      return {\r\n        ...state,\r\n        error: true\r\n      }\r\n    case 'CLEAR_ERROR':\r\n      return {\r\n        ...state,\r\n        error: false\r\n      }\r\n    case 'ANALYZE_IMAGE_ERROR':\r\n      return {\r\n        ...state,\r\n        errorData: action.errorData,\r\n        error: action.error,\r\n        loader: action.loader,\r\n        // keep modal open if error\r\n        open: action.open\r\n      };\r\n    case 'OPEN_IMAGE_MODAL':\r\n      return {\r\n        ...state,\r\n        open: true,\r\n        error: false\r\n      };\r\n    case 'CLOSE_IMAGE_MODAL':\r\n      return {\r\n        ...state,\r\n        open: false,\r\n        error: false,\r\n      };\r\n    case 'UPDATE_HEX_COLOR':\r\n      function updateObjectInArray(array, action) {\r\n        return array.map((item, index) => {\r\n          if (index !== action.index) {\r\n            // This isn't the item we care about - keep it as-is\r\n            return item\r\n          }\r\n          // Otherwise, this is the one we want - return an updated value\r\n          return {\r\n            ...item,\r\n            ...action.item\r\n          }\r\n        })\r\n      }\r\n      return {...state,\r\n          colors: updateObjectInArray(state.colors, action.newColorSet)\r\n        };\r\n    default:\r\n     return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  url: 'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\r\n  exampleImages: [\r\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/FujiExample.jpg',\r\n    'https://raw.githubusercontent.com/fulin426/Color-Pic/master/client/src/images/DabinExample.jpg',\r\n    'https://images.unsplash.com/photo-1493804714600-6edb1cd93080?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=1050&q=80'\r\n  ],\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'MAIN_IMAGE':\r\n      // so no empty string urls are being set\r\n      if (action.url.length === 0) {\r\n        return state;\r\n      }\r\n      return {\r\n       ...state,\r\n       url: action.url\r\n     };\r\n    case 'ADD_URL':\r\n      if (action.url.length === 0) {\r\n        return state;\r\n      }\r\n      return {\r\n       ...state,\r\n       exampleImages: state.exampleImages.concat(action.url)\r\n     };\r\n     case 'DELETE_URL':\r\n     // temporary so at least one image is showing and no react errors\r\n     if(state.exampleImages.length === 1) {\r\n        return state;\r\n     }\r\n      const newImageList = state.exampleImages.filter( url => url !== action.url);\r\n      return {\r\n        ...state,\r\n        // set new url to first one in new Image list\r\n        url: newImageList[0],\r\n        exampleImages: newImageList\r\n      };\r\n    default:\r\n     return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  hexColor: '',\r\n  R: '',\r\n  G: '',\r\n  B: '',\r\n  alpha: '',\r\n  position: 0,\r\n  selectedColor: ''\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'SEND_COLOR_INFO':\r\n      return {...state,\r\n        hexColor: action.hexColor,\r\n        R: action.R,\r\n        G: action.G,\r\n        B: action.B,\r\n        alpha: action.alpha\r\n      };\r\n      case 'SEND_POSITION_INFO':\r\n        return {...state,\r\n          position: action.position\r\n        };\r\n      case 'CLEAR_POSITION_INFO':\r\n        return {...state,\r\n          position: action.position\r\n          };\r\n      case 'SEND_ALPHA_INFO':\r\n        return {...state,\r\n          alpha: action.alpha\r\n        };\r\n      case 'SELECTED_COLOR':\r\n        return {...state,\r\n          selectedColor: action.selectedColor\r\n        };\r\n    default:\r\n     return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  Data: [],\r\n  AddColor: \"\",\r\n  DeleteColor: \"\",\r\n  UpdateColor: \"\",\r\n  loading: false\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_COLORS\":\r\n      return {\r\n        ...state,\r\n        Data: action.payload,\r\n        loading: false\r\n      };\r\n    case \"ADD_COLORS\":\r\n      return {\r\n        ...state,\r\n        Data: state.Data.concat(action.payload),\r\n        AddColor: `\"${action.payload.title}\" Created ${action.payload._id}`\r\n      };\r\n    case \"UPDATE_COLORS\":\r\n      return {\r\n        ...state,\r\n        UpdateColor: `${action.payload} is the new update`\r\n      };\r\n    case \"DELETE_COLORS\":\r\n      return {\r\n        ...state,\r\n        Data: state.Data.filter(item => item._id !== action.payload),\r\n        DeleteColor: `${action.payload} was Deleted`\r\n      };\r\n    case \"COLORS_LOADING\":\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case \"CLEAR_PALETTE_COLORS\":\r\n      return {\r\n        ...state,\r\n        Data: [],\r\n        AddColor: \"\",\r\n        DeleteColor: \"\",\r\n        UpdateColor: \"\"\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","const initialState = {\r\n  message: '',\r\n  status: null\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch(action.type) {\r\n    case 'GET_ERRORS':\r\n      return {\r\n        message: action.payload.data,\r\n        status: action.payload.status,\r\n        id: action.payload.id\r\n      };\r\n    case 'CLEAR_ERRORS':\r\n      return {\r\n        msg: '',\r\n        status: null\r\n      };\r\n    default:\r\n    return state;\r\n  }\r\n}\r\n","\r\nconst initialState = {\r\n  token: localStorage.getItem('token'),\r\n  isAuthenticated: null,\r\n  isLoading: false,\r\n  user: '',\r\n  modal: false\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case 'USER_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: true\r\n      };\r\n    case 'USER_LOADED':\r\n      return {\r\n        ...state,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        user: action.payload\r\n      };\r\n    case 'OPEN_MODAL':\r\n      return {\r\n        ...state,\r\n        modal: true\r\n      };\r\n    case 'CLOSE_MODAL':\r\n      return {\r\n        ...state,\r\n        modal: false\r\n      };\r\n    case 'LOGIN_SUCCESS':\r\n    case 'REGISTER_SUCCESS':\r\n      localStorage.setItem('token', action.payload.token);\r\n      return {\r\n        ...state,\r\n        ...action.payload,\r\n        isAuthenticated: true,\r\n        isLoading: false,\r\n        modal: false\r\n      };\r\n    case 'AUTH_ERROR':\r\n    case 'LOGIN_FAIL':\r\n    case 'LOGOUT_SUCCESS':\r\n    case 'REGISTER_FAIL':\r\n      localStorage.removeItem('token');\r\n      return {\r\n        ...state,\r\n        token: null,\r\n        user: '',\r\n        isAuthenticated: false,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport clarifaiReducer from './clarifaiReducer';\r\nimport imageUrlReducer from './imageUrlReducer';\r\nimport colorInfoReducer from './colorInfoReducer';\r\nimport colorPaletteReducer from './colorPaletteReducer';\r\nimport errorsReducer from './errorsReducer';\r\nimport authReducer from './authReducer';\r\n\r\nexport default combineReducers({\r\n  colors: clarifaiReducer,\r\n  url: imageUrlReducer,\r\n  colorInfo: colorInfoReducer,\r\n  myPalettes: colorPaletteReducer,\r\n  errors: errorsReducer,\r\n  auth: authReducer\r\n});\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nimport App from './components/App';\r\nimport reducers from './reducers';\r\n\r\nconst initialState = {};\r\n\r\nconst store = createStore(\r\n  reducers,\r\n  initialState,\r\n  applyMiddleware(thunk));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}